<% if notice %>
  <div class="flash-notice"><%= notice %></div>
<% end %>

<div class="breadcrumb">
  <%= link_to t('navigation.back_to_dashboard'), root_path, class: "back-link" %>
</div>

<div class="page-header">
  <h1><%= t('items.all_items') %></h1>
  <p><%= t('items.browse_all_items_desc') %></p>

  <div class="action-buttons">
    <%= link_to "üì¶ #{t('items.new_item')}", new_item_path, class: "btn btn-success" %>
    <button type="button" id="print-selected-btn" class="btn btn-primary" disabled>üñ®Ô∏è <%= t('items.print_selected') %></button>
  </div>

  <div class="filters-section">
    <%= form_with url: search_items_path, method: :get, local: true, class: "search-form" do |f| %>
      <%= f.text_field :q, placeholder: t('items.search_placeholder'), value: params[:q], class: "search-input" %>
      <%= f.submit t('navigation.search'), class: "btn btn-primary" %>
      <% if params[:q].present? %>
        <%= link_to t('navigation.clear'), items_path, class: "btn btn-secondary" %>
      <% end %>
    <% end %>

    <div class="category-filter">
      <%= form_with url: items_path, method: :get, local: true, class: "filter-form" do |f| %>
        <%= f.collection_select :category_id, Category.ordered, :id, :name,
            { prompt: t('categories.all_categories'), selected: params[:category_id] },
            { class: "filter-select", onchange: "this.form.submit();" } %>
      <% end %>
    </div>
  </div>
</div>

<div class="items-list">
  <% if @items.any? %>
    <%= form_tag print_barcodes_items_path, method: :post, id: "barcode-print-form", target: "_blank" do %>
      <div class="items-table">
        <table>
          <thead>
            <tr>
              <th>
                <input type="checkbox" id="select-all" />
                <label for="select-all"><%= t('navigation.select_all') %></label>
              </th>
              <th><%= t('items.print_copies') %></th>
              <th class="sortable">
                <%= link_to items_path(sort: 'name', direction: (@sort_column == 'name' && @sort_direction == 'asc') ? 'desc' : 'asc', category_id: params[:category_id], q: params[:q]), class: "sort-link" do %>
                  <%= t('items.item_name') %>
                  <% if @sort_column == 'name' %>
                    <span class="sort-indicator <%= @sort_direction %>">
                      <%= @sort_direction == 'asc' ? '‚ñ≤' : '‚ñº' %>
                    </span>
                  <% end %>
                <% end %>
              </th>
              <th class="sortable">
                <%= link_to items_path(sort: 'category', direction: (@sort_column == 'category' && @sort_direction == 'asc') ? 'desc' : 'asc', category_id: params[:category_id], q: params[:q]), class: "sort-link" do %>
                  <%= t('items.category') %>
                  <% if @sort_column == 'category' %>
                    <span class="sort-indicator <%= @sort_direction %>">
                      <%= @sort_direction == 'asc' ? '‚ñ≤' : '‚ñº' %>
                    </span>
                  <% end %>
                <% end %>
              </th>
              <th class="sortable">
                <%= link_to items_path(sort: 'quantity', direction: (@sort_column == 'quantity' && @sort_direction == 'asc') ? 'desc' : 'asc', category_id: params[:category_id], q: params[:q]), class: "sort-link" do %>
                  <%= t('items.total_quantity') %>
                  <% if @sort_column == 'quantity' %>
                    <span class="sort-indicator <%= @sort_direction %>">
                      <%= @sort_direction == 'asc' ? '‚ñ≤' : '‚ñº' %>
                    </span>
                  <% end %>
                <% end %>
              </th>
              <th><%= t('items.oldest_storage') %></th>
              <th><%= t('items.locations') %></th>
              <th><%= t('common.actions') %></th>
            </tr>
          </thead>
          <tbody>
            <% @items.each do |item| %>
              <tr>
                <td>
                  <%= check_box_tag "item_ids[]", item.id, false, class: "item-checkbox", id: "item_#{item.id}" %>
                </td>
                <td class="print-copies">
                  <%= number_field_tag "copies[#{item.id}]", 1,
                      min: 1, max: 20,
                      class: "copy-quantity-input",
                      id: "copies_#{item.id}",
                      disabled: true %>
                </td>
                <td>
                  <%= link_to item.name, item_path(item.barcode), class: "item-link" %>
                  <% if item.description.present? %>
                    <br><small class="description"><%= item.description %></small>
                  <% end %>
                </td>
                <td class="category">
                  <% if item.category %>
                    <%= link_to item.category.name, category_path(item.category), class: "category-link" %>
                  <% else %>
                    <span class="no-category">Uncategorized</span>
                  <% end %>
                </td>
                <td class="quantity"><%= item.total_quantity %></td>
                <td class="oldest-storage">
                  <% if aging_enabled? %>
                    <% oldest_inventory = @oldest_inventory_items[item.id]&.first %>
                    <% if oldest_inventory %>
                      <% days_stored = (Date.current - oldest_inventory.added_at.to_date).to_i %>
                      <span class="storage-duration-badge <%= aging_css_class(days_stored) %>">
                        <%= pluralize(days_stored, 'day') %>
                      </span>
                      <br>
                      <small>in <%= link_to oldest_inventory.location.name, location_path(oldest_inventory.location.barcode), class: "location-link" %></small>
                    <% end %>
                  <% end %>
                </td>
                <td class="locations">
                  <% if item.locations.any? %>
                    <%= item.locations.map(&:name).join(", ") %>
                  <% else %>
                    <span class="no-locations">Not in any <%= location_term.downcase %></span>
                  <% end %>
                </td>
                <td class="actions">
                  <%= link_to "Edit", edit_item_path(item.barcode), class: "btn btn-sm btn-secondary" %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    <% end %>

    <%= paginate @items %>
  <% else %>
    <div class="empty-state">
      <h3>No items found</h3>
      <p>No items have been added to the system yet.</p>
    </div>
  <% end %>
</div>

<script>
function initializeItemsPrintButton() {
  function updateSelectAllState() {
    const selectAllCheckbox = document.getElementById('select-all');
    const checkedBoxes = document.querySelectorAll('.item-checkbox:checked');
    const allItemCheckboxes = document.querySelectorAll('.item-checkbox');

    if (selectAllCheckbox && allItemCheckboxes.length > 0) {
      selectAllCheckbox.checked = checkedBoxes.length === allItemCheckboxes.length;
      selectAllCheckbox.indeterminate = checkedBoxes.length > 0 && checkedBoxes.length < allItemCheckboxes.length;
    }
  }

  function updateCopyInputs() {
    const checkedBoxes = document.querySelectorAll('.item-checkbox:checked');
    const allCopyInputs = document.querySelectorAll('.copy-quantity-input');

    // Enable copy inputs for selected items, disable for unselected
    allCopyInputs.forEach(function(input) {
      const itemId = input.id.replace('copies_', '');
      const itemCheckbox = document.getElementById(`item_${itemId}`);
      input.disabled = !itemCheckbox || !itemCheckbox.checked;
    });
  }

  function updatePrintButton() {
    const printButton = document.getElementById('print-selected-btn');
    const checkedBoxes = document.querySelectorAll('.item-checkbox:checked');

    if (printButton) {
      printButton.disabled = checkedBoxes.length === 0;

      if (checkedBoxes.length > 0) {
        // Calculate total copies to print
        let totalCopies = 0;
        checkedBoxes.forEach(function(checkbox) {
          const itemId = checkbox.value;
          const copyInput = document.getElementById(`copies_${itemId}`);
          if (copyInput) {
            totalCopies += parseInt(copyInput.value) || 1;
          }
        });

        const labelText = totalCopies === 1 ? '<%= j t('items.label') %>' : '<%= j t('items.labels') %>';
        const itemText = checkedBoxes.length === 1 ? '<%= j t('items.item') %>' : '<%= j t('items.items') %>';
        printButton.textContent = `üñ®Ô∏è <%= j t('items.print') %> ${totalCopies} ${labelText} (${checkedBoxes.length} ${itemText})`;
      } else {
        printButton.textContent = 'üñ®Ô∏è <%= j t('items.print_selected') %>';
      }
    }
  }

  // Use event delegation for dynamic content
  document.addEventListener('change', function(e) {
    if (e.target && e.target.id === 'select-all') {
      // Handle select all checkbox
      const isChecked = e.target.checked;
      document.querySelectorAll('.item-checkbox').forEach(function(checkbox) {
        checkbox.checked = isChecked;
      });
      updateCopyInputs();
      updatePrintButton();
    } else if (e.target && e.target.classList.contains('item-checkbox')) {
      // Handle individual item checkbox
      updateSelectAllState();
      updateCopyInputs();
      updatePrintButton();
    } else if (e.target && e.target.classList.contains('copy-quantity-input')) {
      // Handle copy quantity change
      updatePrintButton();
    }
  });

  // Handle print button click
  document.addEventListener('click', function(e) {
    if (e.target && e.target.id === 'print-selected-btn') {
      const form = document.getElementById('barcode-print-form');
      if (form) {
        form.submit();
      }
    }
  });

  // Initialize button state after a short delay to ensure DOM is ready
  setTimeout(function() {
    updateSelectAllState();
    updatePrintButton();
  }, 50);
}

// Initialize on both DOMContentLoaded and Turbo events
document.addEventListener('DOMContentLoaded', initializeItemsPrintButton);
document.addEventListener('turbo:load', initializeItemsPrintButton);
document.addEventListener('turbo:render', initializeItemsPrintButton);
</script>

<style>
.filters-section {
  display: flex;
  gap: 20px;
  align-items: flex-end;
  margin-bottom: 20px;
}

.search-form {
  flex: 1;
}

.category-filter {
  min-width: 200px;
}

.filter-form {
  margin: 0;
}

.filter-select {
  padding: 8px 12px;
  border: 1px solid #ddd;
  border-radius: 4px;
  background: white;
  font-size: 14px;
}

.category-link {
  color: #007bff;
  text-decoration: none;
  font-size: 0.9em;
}

.category-link:hover {
  text-decoration: underline;
}

.no-category {
  color: #6c757d;
  font-style: italic;
  font-size: 0.9em;
}
</style>
